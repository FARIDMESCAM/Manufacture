<?php

namespace fsm\EchangeBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;

/**
 * ObjetRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ObjetRepository extends EntityRepository {

    public function getObjetsPhotosByUser($user) {
        $query = $this->createQueryBuilder('o')
                ->where('o.user = :user', 'p.principal= 1')
                ->join('o.photos', 'p')
                ->join('o.user', 'u')
                ->setParameter('user', $user)
                ->addSelect('p', 'u')
        ;
        return $query->getQuery()->getResult();
    }

    public function getObjetPhotosByObjet($objet) {
        $query = $this->createQueryBuilder('o')
                ->where('o.id = :objet')
                ->leftjoin('o.photos', 'p')
                ->join('o.user', 'u')
                ->setParameter('objet', $objet)
                ->addSelect('p', 'u')
        ;
        return $query->getQuery()->getResult();
    }

    public function getObjetsPhotos() {
      
$query = $this->createQueryBuilder('o')
                 ->join('o.photos', 'p')
                ->join('o.user', 'u')
                             ->addSelect('p', 'u')
        ;
        return $query->getQuery()->getResult();
    }
    
    public function test () {
        $query = $this->createQueryBuilder('o')
                 ->leftJoin('o.photos', 'p')
                ->join('o.user', 'u')
                ->join('o.categories', 'c')
                 ->addSelect('p', 'u','c');
//         ->setMaxResults('1');
        return $query->getQuery()->getResult();
        
    }
    

    public function getObjetsPhotos5() {
        $query = $this->createQueryBuilder('o')
                ->where('p.principal= 1')
                ->join('o.photos', 'p')
                ->join('o.user', 'u')
                ->addSelect('p', 'u')
                -> orderBy ('o.id', 'DESC')
                ->setMaxResults('3');
        ;
        return $query->getQuery()->getResult();
    }

    public function search($criteres){
        
        $name = $criteres['0'];
        
        $cat = $criteres['1'];
         $query = $this->createQueryBuilder('o');

        //  ce faisant, il faut ajouter une méthode to_string dans l'entité categorie
                  $query->leftJoin('o.photos', 'p')
                 ->join('o.user', 'u')
                 ->join('o.categories','cat')
                 ->where($query->expr()->in('cat.nom',$cat))
              ->andWhere('o.nom like :name')
                ->setParameter('name', $name)
        ->addSelect('p', 'u','cat');
          return $query->getQuery()->getResult();
        
     }
}
