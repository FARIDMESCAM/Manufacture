<?php

namespace fsm\EchangeBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * DemandeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DemandeRepository extends EntityRepository
{
    
        public function mesDemandes($user) {
            // On veut récupérer toutes les demandes par rapport à un utilisateur
            // Sur l'utilisateur, l'associaton photo n'est pas obligatoir
            // On ne peut donc restreindre à ce niveau la sélection des photos principales
        $query = $this->createQueryBuilder('d')
                 ->join('d.objet', 'o')
                ->join('d.user', 'u')
                ->leftjoin('u.photos','p')
                ->where('o.user = :user')
                ->setParameter('user', $user)
                ->addSelect('o','u','p');       
        return $query->getQuery()->getResult();
    }

    // Ici, restriction sur le user de la demande, et on ramène le user propriétaire de l'objet
        public function mesLocations($user) {
             $query = $this->createQueryBuilder('d')
                 ->join('d.objet', 'o')
                ->join('o.user', 'u')
                ->leftjoin('u.photos','p')
                ->where('d.user = :user')
                ->setParameter('user', $user)
                ->addSelect('o','u','p');       
        return $query->getQuery()->getResult();
            
        }
        
         public function DemandesEnCoursFinies() {
             
//             Si on met \ alors on fait appel au namespace global
             $datedujour = new \DateTime();
             $query = $this->createQueryBuilder('d')
                 -> setParameter ('dateDuJour', $datedujour )
                 ->join('d.objet', 'o')
                ->join('o.user', 'u')
               ->where('d.fin < :dateDuJour and d.statut = 2')
               ->addSelect('o','u');       
        return $query->getQuery()->getResult();
            
        }
        

    
}
